name: CI
on: [push, pull_request]


jobs:
  check-code-formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Code Check
        shell: bash
        run: ./cleanup_code.sh && git diff --exit-code


  sim-linux-sdl2mixer:
    name: Linux (SDL2_mixer, freetype)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake clang++-10 zlib1g-dev libbz2-dev libsdl2-dev libsdl2-mixer-dev libfreetype6-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=clang-10 CXX=clang++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=mixer_sdl2 -DSIMUTRANS_USE_FREETYPE=ON
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended


  sim-linux-posix:
    name: Linux (headless)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake clang++-10 zlib1g-dev libbz2-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=clang-10 CXX=clang++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended


  sim-linux-debug-sdl2:
    name: Linux (Debug SDL2, single threaded)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10 zlib1g-dev libbz2-dev libsdl2-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Debug -DSIMUTRANS_BACKEND=sdl2 -DSIMUTRANS_MULTI_THREAD=OFF
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended

  sim-linux-debug-sdl2-vulkan:
    name: Linux (Debug SDL2 Vulkan, single threaded)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10 zlib1g-dev libbz2-dev libsdl2-dev libvulkan-dev libglm-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Debug -DSIMUTRANS_BACKEND=sdl2_vulkan -DVULKAN_RENDERER=ON -DSIMUTRANS_MULTI_THREAD=OFF
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: |
            build/simutrans/simutrans-extended
            simutrans/shaders


  makeobj-linux:
    name: Linux Makeobj
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10 zlib1g-dev libbz2-dev libpng-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) makeobj-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/makeobj-extended


  nettool-linux:
    name: Linux Nettool
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10
      - name: Configure
        run: |
          mkdir build && cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) nettool-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/nettool-extended


  sim-mac-sdl2:
    name: macOS (SDL2)
    runs-on: macOS-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        run: |
          curl -L -o ./SDL2-2.0.12.dmg https://www.libsdl.org/release/SDL2-2.0.12.dmg
          hdiutil attach ./SDL2-2.0.12.dmg >>/dev/stderr
          sudo cp -R -v /Volumes/SDL2/SDL2.framework /Library/Frameworks/
          sudo ls /Library/Frameworks/ >>/dev/stderr
          hdiutil eject /Volumes/SDL2 >>/dev/stderr
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=sdl2
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended


  sim-mac-headless:
    name: macOS (headless)
    runs-on: macOS-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended


  makeobj-mac:
    name: macOS Makeobj
    runs-on: macOS-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) makeobj-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/makeobj-extended


  nettool-mac:
    name: macOS Nettool
    runs-on: macOS-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) nettool-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/nettool-extended


  sim-mingw-sdl2:
    name: Windows (MinGW, SDL2)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=sdl2
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe

  sim-mingw-sdl2-vulkan:
    name: Windows (MinGW, SDL2 vulkan)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake mingw64-vulkan-headers mingw64-vulkan-validation-layers mingw64-spirv-tools mingw64-vulkan-loader glm-devel
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=sdl2
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: |
            build/simutrans/simutrans-extended.exe
            simutrans/shaders


  sim-mingw-gdi:
    name: Windows (MinGW, GDI)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=gdi
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe


  sim-mingw-posix:
    name: Windows (MinGW, headless)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe


  makeobj-mingw:
    name: Windows Makeobj (MinGW)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) makeobj-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/makeobj-extended.exe


  nettool-mingw:
    name: Windows Nettool (MinGW)
    runs-on: ubuntu-latest
    needs: [check-code-formatting]
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) nettool-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/nettool-extended.exe


  sim-windows-gdi:
    name: Windows (MSVC, GDI)
    runs-on: windows-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=gdi -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          msbuild.exe Simutrans-Extended.sln /t:simutrans-extended /p:Configuration=Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/Release/simutrans-extended.exe


  sim-windows-sdl2mixer:
    name: Windows (MSVC, SDL2_mixer)
    runs-on: windows-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 sdl2 sdl2-mixer'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=mixer_sdl2 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          msbuild.exe Simutrans-Extended.sln /t:simutrans-extended /p:Configuration=Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/Release/simutrans-extended.exe


  sim-windows-headless:
    name: Windows (MSVC, headless, zstd, UPNP)
    runs-on: windows-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 miniupnpc zstd'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=none -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          msbuild.exe Simutrans-Extended.sln /t:simutrans-extended /p:Configuration=Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/Release/simutrans-extended.exe


  makeobj-windows:
    name: Windows Makeobj (MSVC)
    runs-on: windows-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 libpng'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=none -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          msbuild.exe Simutrans-Extended.sln /t:makeobj-extended /p:Configuration=Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/Release/makeobj-extended.exe


  nettool-windows:
    name: Windows Nettool (MSVC)
    runs-on: windows-latest
    needs: [check-code-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=none -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          msbuild.exe Simutrans-Extended.sln /t:nettool-extended /p:Configuration=Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/Release/nettool-extended.exe
